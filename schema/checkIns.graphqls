enum ResponseType {
    SCALE
    TASK
    TEXT
}

type CheckIn {
    id: ID!
    questions: [Question!]!
    user: User!
    createdAt: Time!
    completedAt: Time
    reviewedAt: Time
}

type Question {
    id: ID!
    # checkIn: CheckIn!
    position: Int!
    questionType: String!
    text: String!
    responseType: ResponseType!
    # responses: [Response!]
}

# type Response {
#     id: ID!
#     position: Int!
#     question: Question!
# }

# type ScaleResponse implements Response {
#     id: ID!
#     position: Int!
#     question: Question!
#     response: Int!
# }

# # extend type Query {
# #     checkIns: [CheckIn!]
# #     # checkInByID(checkInID: ID!): CheckIn!
# # }

input CreateCheckInInput {
    userID: ID!
}

extend type Mutation {
    createCheckIn(input: CreateCheckInInput!): String!
}

extend type Query {
    checkIns: [CheckIn!]
    checkInByID(checkInID: ID!): CheckIn!
}