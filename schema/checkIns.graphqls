enum ResponseType {
    SCALE
    TASK
    TEXT
}

type CheckIn {
    id: ID!
    questions: [Question!]!
    user: User!
    reviewer: User!
    createdAt: Time!
    completedAt: Time
    reviewedAt: Time
    review: String
    expiresAt: Time!
    expired: Boolean!
}

type Question {
    id: ID!
    # checkIn: CheckIn!
    position: Int!
    questionType: String!
    text: String!
    responseType: ResponseType!
    responses: [Response!]
}

type Response {
    id: ID!
    position: Int!
    response: String!
}

input CreateCheckInInput {
    userID: ID!
}

input ResponseInput {
    questionID: ID!
    position: Int!
    response: String!
}

input SubmitCheckInResponsesInput {
    checkInID: ID!
    responses: [ResponseInput!]!
}

input SubmitCheckInReviewInput {
    checkInID: ID!
    review: String!
}

extend type Mutation {
    createCheckIn(input: CreateCheckInInput!): String!
    submitCheckInResponses(input: SubmitCheckInResponsesInput!): CheckIn!
    submitCheckInReview(input: SubmitCheckInReviewInput!): CheckIn!
}

extend type Query {
    checkIns: [CheckIn!]
    checkInsByReviewer: [CheckIn!]
    checkInByID(checkInID: ID!): CheckIn!
}